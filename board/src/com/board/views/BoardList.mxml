<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="getContentList(event)">
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.collections.XMLListCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.ResultEvent;
			import mx.utils.ObjectUtil;
			
			import spark.events.GridEvent;
			
			
			public function getContentList(event:Event):void
			{
				listHTTP.send({page:currentPage});
			}
			
			protected function listHTTP_resultHandler(event:ResultEvent):void
			{
				var xml:XML = new XML(event.result);
				boardList.dataProvider = new XMLListCollection(XMLList(xml.row));
				maxPage = Math.floor(parseInt(XMLList(xml.totalCount)[0]) / 20);
				
			}
			
			
			private var boardContent:BoardContent = new BoardContent;
			private var boardAdd:BoardAdd = new BoardAdd;
			
			protected function add_clickHandler(event:Event):void
			{
				boardAdd.removeEventListener("getContentComplete", openContentPage);
				boardAdd.addEventListener("insertComplete", getContentList);
				
				if(!boardAdd.visible)
					boardAdd.visible = true;
				else
					PopUpManager.addPopUp(boardAdd, this);
				
				PopUpManager.centerPopUp(boardAdd);
			}
			
			protected function boardList_gridClickHandler(event:GridEvent):void
			{
				
				var data:Object = event.item;
				if(data)
				{
					boardContent.addEventListener("getContentComplete", openContentPage);
					boardContent.getContent(int(data.seq[0]), data.bname);
				}
			}
			
			private function openContentPage(event:Event):void
			{
				boardContent.removeEventListener("getContentComplete", openContentPage);
				boardContent.addEventListener("updateComplete", getContentList);
				boardContent.addEventListener("deleteComplete", getContentList);
				
				if(!boardContent.visible)
					boardContent.visible = true;
				else
					PopUpManager.addPopUp(boardContent, this);
				
				PopUpManager.centerPopUp(boardContent);
			}
			
			private function refreshList(event:Event):void
			{
				boardContent.removeEventListener("updateComplete", getContentList);
				boardContent.removeEventListener("deleteComplete", getContentList);
				getContentList(event);
			}
			
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<fx:int id="maxPage">1</fx:int>
		
		<fx:int id="currentPage">1</fx:int>
		
		
		<s:HTTPService id="listHTTP" url="{ConfigData.LIST_URL}"
					   result="listHTTP_resultHandler(event)"
					   resultFormat="e4x"
					   method="POST"/>
	</fx:Declarations>
	
	<s:DataGrid id="boardList"
				width="100%" height="100%"
				gridClick="boardList_gridClickHandler(event)">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="writer" headerText="작성자"></s:GridColumn>
				<s:GridColumn dataField="title" headerText="제목"></s:GridColumn>
				<s:GridColumn dataField="hit" headerText="조회수"></s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	
	<s:HGroup width="100%">
		<s:HSlider id="paging"
				   snapInterval="1"
				   minimum="1"
				   maximum="{maxPage}"
				   change="{currentPage = paging.value}"/>
		
		<s:Button label="추가" click="add_clickHandler(event)" />
	</s:HGroup>
</s:Group>
