<?xml version="1.0" encoding="utf-8"?>
<s:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 close="titlewindow1_closeHandler(event)"
		 width="250" height="350" xmlns:Model="com.board.Model.*">
	<fx:Metadata>
		[Event(name="getContentComplete", type="flash.events.Event")]
		[Event(name="deleteComplete", type="flash.events.Event")]
		[Event(name="updateComplete", type="flash.events.Event")]
	</fx:Metadata>
	<s:layout>
		<s:VerticalLayout />
	</s:layout>
	<fx:Script>
		<![CDATA[
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				visible = false;
			}
			
			public function getContent(seq:int, bname:String):void
			{
				contentHTTP.send({seq:seq, bname:bname});
			}
			
			protected function contentHTTP_resultHandler(event:ResultEvent):void
			{
				contentData.makeData(XML(event.result));
				dispatchEvent(new Event("getContentComplete"));
			}
			
				 
			protected function button1_clickHandler(event:MouseEvent):void
			{
				contentData.bname = bBname.text;
				contentData.writer = bWriter.text;
				contentData.title = bTitle.text;
				contentData.content = bContent.text;
				updateHTTP.send(contentData);
			}
			
			protected function button2_clickHandler(event:MouseEvent):void
			{
				delteHTTP.send(contentData);
			}
			
			protected function updateHTTP_resultHandler(event:ResultEvent):void
			{
				if(event.result == 'fail')
				{
					visible = false;
					Alert.show('업데이트 실패');
				}else
				{
					visible = false;
					Alert.show("업데이트 성공");
					dispatchEvent(new Event("updateComplete"));
				}
				
			}
			
			protected function delteHTTP_resultHandler(event:ResultEvent):void
			{
				if(event.result == 'fail')
				{
					Alert.show("삭제 실패");
				}else
				{
					Alert.show("삭제 성공");
					dispatchEvent(new Event("deleteComplete"));
				}
			}
			
			protected function updateHTTP_faultHandler(event:FaultEvent):void
			{
				trace(event.message)
				
			}
			
			protected function contentHTTP_faultHandler(event:FaultEvent):void
			{
				trace(event.message);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<Model:ContentData id="contentData" />
		
		<s:HTTPService id="contentHTTP" 
					   url="{ConfigData.CONTENT_URL}"
					   resultFormat="e4x"
					   result="contentHTTP_resultHandler(event)"
					   fault="contentHTTP_faultHandler(event)"
					   method="POST"/>
		<s:HTTPService id="updateHTTP" 
					   url="{ConfigData.UPDATE_URL}"
					   fault="updateHTTP_faultHandler(event)"
					   resultFormat="e4x"
					   result="updateHTTP_resultHandler(event)"
					   method="POST"/>
		<s:HTTPService id="delteHTTP" 
					   url="{ConfigData.DELETE_URL}"
					   resultFormat="e4x"
					   result="delteHTTP_resultHandler(event)"
					   method="POST"/>
	</fx:Declarations>

	<s:HGroup>
		<s:Label text="작성자" />
		<s:TextInput id="bWriter" text="{contentData.writer}" />
	</s:HGroup>
	<s:HGroup>
		<s:Label text="제목" />
		<s:TextInput id="bTitle" text="{contentData.title}" />
	</s:HGroup>
	<s:HGroup>
		<s:Label text="내용" />
		<s:TextArea id="bContent" text="{contentData.content}"/>
	</s:HGroup>
	<s:HGroup>
		<s:Label text="조회수" />
		<s:TextInput id="bHit" text="{contentData.hit}"/>
	</s:HGroup>
	<s:HGroup>
		<s:Label text="게시판" />
		<s:TextInput id="bBname" text="{contentData.bname}"/>
	</s:HGroup>
	<s:HGroup>
		<s:Label text="작성일" />
		<s:TextInput id="bRegdate" text="{contentData.regdate}"/>
	</s:HGroup>
	
	<s:HGroup>
		<s:Button label="수정" click="button1_clickHandler(event)" />
		<s:Button label="삭제" click="button2_clickHandler(event)" />
	</s:HGroup>
</s:TitleWindow>
